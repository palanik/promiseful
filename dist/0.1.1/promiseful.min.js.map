{"version":3,"file":"promiseful.min.js","sources":["../../src/api/series.js","../../src/api/parallelLimit.js","../../src/api/waterfall.js","../../src/utils/collection.js","../../src/api/core.js","../../src/api/index.js"],"sourcesContent":["import core from './core';\n\nexport default function series(fns) {\n  function reducer(acc, fn) {\n    return new core.Promise((resolve, reject) => {\n      fn()\n      .then((val) => {\n        acc.push(val);\n        resolve(acc);\n      })\n      .catch(reject);\n    });\n  }\n\n  return core.reduce(fns, reducer, []);\n}\n","import utils from '../utils/index';\nimport core from './core';\nimport series from './series';\n\nexport default function parallelLimit(fns, limit) {\n  const funcs = utils.collection.arrayize(fns);\n  if (limit <= funcs.length) {\n    return core.all(funcs);\n  }\n\n  const funcsList = utils.collection.chunk(funcs, limit)\n    .map(c => (() => core.all(c)));\n\n  return series(funcsList)\n    .then(utils.collection.flatten);\n}\n","import core from './core';\n\nexport default function waterfall(fns, initVal) {\n  function reducer(acc, fn) {\n    return new core.Promise((resolve, reject) => {\n      fn(acc)\n      .then(resolve)\n      .catch(reject);\n    });\n  }\n\n  return core.reduce(fns, reducer, initVal);\n}\n","export default class Collection {\n  static arrayize(coll) {\n    return Array.isArray(coll) ? coll : Array.from(coll);\n  }\n\n  static chunk(coll, n) {\n    const array = Collection.arrayize(coll);\n    if (n <= 0 || n >= array.length) {\n      return [array];\n    }\n\n    const ret = [];\n    for (let i = 0; i < array.length; i += n) {\n      ret.push(array.slice(i, i + n));\n    }\n\n    return ret;\n  }\n\n  static flatten(arrays) {\n    return [].concat(...arrays);\n  }\n}\n","import utils from '../utils/index';\n\nclass Promiseful {\n\n  constructor(promise) {\n    this.Promise = promise;\n  }\n\n  fulfil(val) {\n    if (typeof val === 'function') {\n      return val;\n    }\n\n    // Is this a Promise?\n    if (typeof val === 'object'\n      && val.then\n      && typeof val.then === 'function') {\n      return () => val;\n    }\n\n    // Anything else, wrap the value into a promise nd wrap into a function\n    return () => this.Promise.resolve(val);\n  }\n\n  promise(...promise) {\n    if (promise.length > 0) {\n      this.Promise = promise[0];\n    }\n\n    return this.Promise;\n  }\n\n  promisify(fn) {\n    const self = this;\n\n    return (...args) => (\n      new self.Promise((resolve, reject) => {\n        args.push((err, ...result) => {\n          if (err) {\n            reject(err);\n          } else if (result.length <= 1) {\n            resolve(...result);\n          } else {\n            resolve(result);\n          }\n        });\n\n        fn(...args);\n      })\n    );\n  }\n\n  all(funcs) {\n    return this.Promise.all(\n      utils.collection.arrayize(funcs)\n        .map(a => this.fulfil(a))\n        .map(a => a()),\n    );\n  }\n\n  race(fns) {\n    const funcs = utils.collection.arrayize(fns);\n    if (funcs.length < 1) {\n      return this.Promise.resolve(null);\n    }\n\n    return this.Promise.race(funcs.map(a => this.fulfil(a)).map(a => a()));\n  }\n\n  reduce(fns, reducer, inital) {\n    const funcs = utils.collection.arrayize(fns);\n    const self = this;\n\n    return new this.Promise((resolve, reject) => {\n      function next(idx, acc) {\n        if (idx >= funcs.length) {\n          resolve(acc);\n          return;\n        }\n\n        const p = self.fulfil(funcs[idx]);\n        reducer(acc, p, idx)\n        .then(next.bind(this, idx + 1))\n        .catch(reject);\n      }\n\n      next(0, inital);\n    });\n  }\n}\n\nconst instance = new Promiseful((typeof Promise !== 'undefined') ? Promise : null);\nexport default instance;\n","import core from './core';\nimport series from './series';\nimport parallelLimit from './parallelLimit';\nimport waterfall from './waterfall';\n\nconst Promiseful = {\n\n  // core\n  promisify: core.promisify.bind(core),\n  all: core.all.bind(core),\n  race: core.race.bind(core),\n  reduce: core.reduce.bind(core),\n\n  // other\n  series,\n  parallel: core.all.bind(core),\n  parallelLimit,\n  waterfall,\n\n  // aliases\n  every: core.all.bind(core),\n  inject: core.reduce.bind(core),\n  fold: core.reduce.bind(core),\n};\n\nPromiseful.promise = (P) => {\n  if (P) {\n    core.promise(P);\n    return Promiseful;\n  }\n\n  return core.promise();\n};\n\nexport default Promiseful;\n\n// export {\n//     core.promise as promise,\n//     core.all as all,\n//     core.race as race,\n//     core.reduce as reduce,\n//     core.parallelLimit as parallelLimit,\n//\n//     series as series,\n//     parallel as parallel,\n//     waterfall as waterfall,\n//\n//     all as every,\n//     reduce as inject,\n//     reduce as foldl\n// };\n"],"names":["series","fns","reducer","acc","fn","core","Promise","resolve","reject","then","val","push","catch","reduce","parallelLimit","limit","funcs","utils","collection","arrayize","length","all","chunk","map","c","flatten","waterfall","initVal","Collection","coll","Array","isArray","from","n","array","ret","i","slice","arrays","concat","Promiseful","promise","_this","arguments","this","self","args","err","result","_this2","fulfil","a","race","_this3","inital","next","idx","p","bind","instance","promisify","P"],"mappings":"qLAEe,SAASA,GAAOC,WACpBC,GAAQC,EAAKC,SACb,IAAIC,GAAKC,QAAQ,SAACC,EAASC,OAE/BC,KAAK,SAACC,KACDC,KAAKD,KACDP,KAETS,MAAMJ,WAIJH,GAAKQ,OAAOZ,EAAKC,MCVX,QAASY,GAAcb,EAAKc,MACnCC,GAAQC,EAAMC,WAAWC,SAASlB,SACpCc,IAASC,EAAMI,OACVf,EAAKgB,IAAIL,GAMXhB,EAHWiB,EAAMC,WAAWI,MAAMN,EAAOD,GAC7CQ,IAAI,kBAAM,kBAAMlB,GAAKgB,IAAIG,OAGzBf,KAAKQ,EAAMC,WAAWO,SCZZ,QAASC,GAAUzB,EAAK0B,WAC5BzB,GAAQC,EAAKC,SACb,IAAIC,GAAKC,QAAQ,SAACC,EAASC,KAC7BL,GACFM,KAAKF,GACLK,MAAMJ,WAIJH,GAAKQ,OAAOZ,EAAKC,EAASyB,gqBCXdC,oFACHC,SACPC,OAAMC,QAAQF,GAAQA,EAAOC,MAAME,KAAKH,iCAGpCA,EAAMI,MACXC,GAAQN,EAAWT,SAASU,MAC9BI,GAAK,GAAKA,GAAKC,EAAMd,cACfc,OAIL,GADCC,MACGC,EAAI,EAAGA,EAAIF,EAAMd,OAAQgB,GAAKH,IACjCtB,KAAKuB,EAAMG,MAAMD,EAAGA,EAAIH,UAGvBE,mCAGMG,sBACHC,iBAAUD,8BClBlBE,wBAEQC,kBACLnC,QAAUmC,2CAGV/B,oBACc,kBAARA,GACFA,EAIU,qBAARA,gBAAAA,KACNA,EAAID,MACgB,kBAAbC,GAAID,KACP,iBAAMC,IAIR,iBAAMgC,GAAKpC,QAAQC,QAAQG,4CAI9BiC,WAAQvB,OAAS,SACdd,iDAGAsC,KAAKtC,0CAGJF,MACFyC,GAAOD,WAEN,uCAAIE,+CACT,IAAID,GAAKvC,QAAQ,SAACC,EAASC,KACpBG,KAAK,SAACoC,8BAAQC,kDACbD,KACKA,GACEC,EAAO5B,QAAU,iBACf4B,KAEHA,oBAINF,kCAKR9B,oBACK4B,MAAKtC,QAAQe,IAClBJ,EAAMC,WAAWC,SAASH,GACvBO,IAAI,kBAAK0B,GAAKC,OAAOC,KACrB5B,IAAI,kBAAK4B,qCAIXlD,cACGe,EAAQC,EAAMC,WAAWC,SAASlB,SACpCe,GAAMI,OAAS,EACVwB,KAAKtC,QAAQC,QAAQ,MAGvBqC,KAAKtC,QAAQ8C,KAAKpC,EAAMO,IAAI,kBAAK8B,GAAKH,OAAOC,KAAI5B,IAAI,kBAAK4B,uCAG5DlD,EAAKC,EAASoD,MACbtC,GAAQC,EAAMC,WAAWC,SAASlB,GAClC4C,EAAOD,WAEN,IAAIA,MAAKtC,QAAQ,SAACC,EAASC,WACvB+C,GAAKC,EAAKrD,MACbqD,GAAOxC,EAAMI,qBACPjB,MAIJsD,GAAIZ,EAAKK,OAAOlC,EAAMwC,MACpBrD,EAAKsD,EAAGD,GACf/C,KAAK8C,EAAKG,KAAKd,KAAMY,EAAM,IAC3B5C,MAAMJ,KAGJ,EAAG8C,cAKRK,EAAW,GAAInB,GAA+B,mBAAZlC,SAA2BA,QAAU,MCtFvEkC,aAGOnC,EAAKuD,UAAUF,KAAKrD,OAC1BA,EAAKgB,IAAIqC,KAAKrD,QACbA,EAAK+C,KAAKM,KAAKrD,UACbA,EAAKQ,OAAO6C,KAAKrD,qBAIfA,EAAKgB,IAAIqC,KAAKrD,qCAKjBA,EAAKgB,IAAIqC,KAAKrD,UACbA,EAAKQ,OAAO6C,KAAKrD,QACnBA,EAAKQ,OAAO6C,KAAKrD,UAGzBmC,GAAWC,QAAU,SAACoB,SAChBA,MACGpB,QAAQoB,GACNrB,GAGFnC,EAAKoC"}